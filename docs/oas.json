{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "MeGraS API",
    "version" : "0.01",
    "description" : "API for MediaGraphStore 0.01",
    "license" : {
      "name" : "MIT"
    }
  },
  "paths" : {
    "/add/quads" : {
      "post" : {
        "tags" : [ "Addition" ],
        "summary" : "Adds new quads to the graph.",
        "operationId" : "postAddQuads",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiAddQuad"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiQueryResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/delete/quads" : {
      "post" : {
        "tags" : [ "Deletion" ],
        "summary" : "Deletes matching quads from the graph.",
        "operationId" : "postDeleteQuads",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiBasicQuery"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiQueryResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/query/knn" : {
      "post" : {
        "tags" : [ "Query" ],
        "summary" : "Queries the Graph for quads within a kNN-cluster.",
        "operationId" : "postQueryKnn",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiKnnQuery"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiQueryResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/query/object" : {
      "post" : {
        "tags" : [ "Query" ],
        "summary" : "Queries the Graph for quads with a specific object.",
        "operationId" : "postQueryObject",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiQuadValueQuery"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiQueryResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/query/path" : {
      "post" : {
        "tags" : [ "Query" ],
        "summary" : "Queries a path along a set of predicates starting from a set of subjects.",
        "operationId" : "postQueryPath",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiPathQuery"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiQueryResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/query/predicate" : {
      "post" : {
        "tags" : [ "Query" ],
        "summary" : "Queries the Graph for quads with a specific predicate.",
        "operationId" : "postQueryPredicate",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiQuadValueQuery"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiQueryResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/query/quads" : {
      "post" : {
        "tags" : [ "Query" ],
        "summary" : "Queries the Graph.",
        "operationId" : "postQueryQuads",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiBasicQuery"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiQueryResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/query/relevancefeedback" : {
      "post" : {
        "tags" : [ "Query" ],
        "summary" : "Queries the Graph for quads based on positive and negative examples.",
        "operationId" : "postQueryRelevancefeedback",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiRelevanceFeedbackQuery"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiQueryResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/query/sparql" : {
      "get" : {
        "tags" : [ "Query" ],
        "summary" : "Queries the Graph using SPARQL.",
        "operationId" : "getQuerySparql",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiSparqlResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/query/subject" : {
      "post" : {
        "tags" : [ "Query" ],
        "summary" : "Queries the Graph for quads with a specific subject.",
        "operationId" : "postQuerySubject",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiQuadValueQuery"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiQueryResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/query/text" : {
      "post" : {
        "tags" : [ "Query" ],
        "summary" : "Queries the Graph for quads with a specific predicate and an object string that matches a specified filter text.",
        "operationId" : "postQueryText",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiTextQuery"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiQueryResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "StackTraceElement" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "fileName" : {
            "type" : "string"
          },
          "lineNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "moduleName" : {
            "type" : "string"
          },
          "moduleVersion" : {
            "type" : "string"
          },
          "classLoaderName" : {
            "type" : "string"
          },
          "className" : {
            "type" : "string"
          },
          "methodName" : {
            "type" : "string"
          },
          "nativeMethod" : {
            "type" : "boolean"
          }
        },
        "required" : [ "lineNumber", "nativeMethod" ]
      },
      "Throwable" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "localizedMessage" : {
            "type" : "string"
          },
          "cause" : {
            "$ref" : "#/components/schemas/Throwable"
          },
          "stackTrace" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StackTraceElement"
            }
          },
          "ourStackTrace" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StackTraceElement"
            }
          },
          "suppressed" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Throwable"
            }
          }
        }
      },
      "RestErrorStatus" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "localizedMessage" : {
            "type" : "string"
          },
          "cause" : {
            "$ref" : "#/components/schemas/Throwable"
          },
          "stackTrace" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StackTraceElement"
            }
          },
          "suppressed" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Throwable"
            }
          },
          "statusCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "statusCode", "message" ]
      },
      "ApiAddQuad" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "quads" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApiQuad"
            }
          }
        },
        "required" : [ "quads" ]
      },
      "ApiBasicQuery" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "s" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "p" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "o" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ApiKnnQuery" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "predicate" : {
            "type" : "string"
          },
          "object" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "distance" : {
            "$ref" : "#/components/schemas/Distance"
          }
        },
        "required" : [ "predicate", "object", "count", "distance" ]
      },
      "ApiPathQuery" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "seeds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "predicates" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "maxDepth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "reverse" : {
            "type" : "boolean"
          }
        },
        "required" : [ "maxDepth", "reverse" ]
      },
      "ApiQuad" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "s" : {
            "type" : "string"
          },
          "p" : {
            "type" : "string"
          },
          "o" : {
            "type" : "string"
          }
        },
        "required" : [ "s", "p", "o" ]
      },
      "ApiQuadValueQuery" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "quadValue" : {
            "type" : "string"
          }
        },
        "required" : [ "quadValue" ]
      },
      "ApiQueryResult" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApiQuad"
            }
          }
        },
        "required" : [ "results" ]
      },
      "ApiRelevanceFeedbackQuery" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "positives" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "negatives" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "predicate" : {
            "type" : "string"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "positives", "negatives", "predicate", "count" ]
      },
      "ApiTextQuery" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "predicate" : {
            "type" : "string"
          },
          "filterText" : {
            "type" : "string"
          }
        },
        "required" : [ "predicate", "filterText" ]
      },
      "Distance" : {
        "type" : "string",
        "enum" : [ "COSINE" ]
      },
      "ApiSparqlResult" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "head" : {
            "$ref" : "#/components/schemas/ApiSparqlResultHead"
          },
          "results" : {
            "$ref" : "#/components/schemas/ApiSparqlResultBody"
          }
        },
        "required" : [ "head", "results" ]
      },
      "ApiSparqlResultBody" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "bindings" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ApiSparqlResultValue"
            }
          }
        },
        "required" : [ "bindings" ]
      },
      "ApiSparqlResultHead" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "vars" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "link" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "vars" ]
      },
      "ApiSparqlResultValue" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "datatype" : {
            "type" : "string"
          }
        },
        "required" : [ "value", "type" ]
      }
    },
    "securitySchemes" : { }
  },
  "servers" : [ ],
  "security" : null
}